{
  "name": "Blog",
  "tagline": "Android 网络加载动态库 .so",
  "body": "这几天做项目时遇到一个问题，共17M的Apk，仅两个.so文件就占到14M，就尝试着用户安装完app之后，根据用户需要再加载.so文件，找了之后，方法倒不复杂。\r\n\r\n  1. .so文件的网络下载部分就不展示，\r\n\r\n  2. .so文件存放路径：一般建议存放在 data/data/<packageName>/路径下，代码如下：\r\n\r\n \r\n复制代码\r\n\r\n    //getFileDir() :/data/data/<packageName>/file/\r\n    File file2 = new File(getFilesDir(), \"libBankeysCoreApi.so\");\r\n    try {\r\n            //fos = openFileOutput(\"libBankeysCoreApi.so\", Context.MODE_PRIVATE); //第一个参数：文件名，不允许包含分隔符“/”，如果文件不存在，android会自动创建\r\n                                                            //第二个参数：指定操作模式 \r\n　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　//有网友推荐这样使用，但试过之后会保存，提示 \"/data/data/<packageName>/app_\" 是个路径的错误\r\n                                                            //我放弃这个办法 \r\n\r\n            fos = new FileOutputStream(file2.getAbsoluteFile());\r\n            fos.write(b);\r\n            fos.close();\r\n            Log.e(\"TAG\", \"\" + true + \";\" + file2.getAbsolutePath());\r\n        } catch (FileNotFoundException e) {\r\n            e.printStackTrace();\r\n            Log.e(\"TAG\", e.getMessage());\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n            Log.e(\"TAG\", e.getMessage());\r\n        } \r\n        System.load(file2.getAbsolutePath());\r\n\r\n复制代码\r\n\r\n  另外：lib下库一般会在/data/data/<packageName>/lib/下备份，调用方法做个改动，如下：\r\n\r\nSystem.loadLibrary(\"\");\r\n\r\n 另，附上：\r\n\r\n`getPackageCodePath():/data/app/com.example.download.sotest-2.apk`\r\n`getFilesDir():/data/data/com.example.download.sotest/files`\r\n`getPackageResourcePath():/data/app/com.example.download.sotest-2.apk`\r\n`getCacheDir():/data/data/com.example.download.sotest/cache`\r\n`getExternalCacheDir():/storage/emulated/0/Android/data/com.example.download.sotest/cache`\r\n`getObbDir():/storage/emulated/0/Android/obb/com.example.download.sotest`\r\n`getFilesDir():/data/data/com.example.download.sotest/files`\r\n\r\n上面部分我试过之后是可行的，希望能帮到大家。",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}